using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


/*
 * Exceptions provide way to tranfer control from one part of the program to another when an exceptional circumstance arises
 * - try: identifies block of code where an exception may be activated
 * - catch: catches exception with a handler at the place in the program where it arose
 * - finally: execute code whether an exception was  thrown or not
 * - throw: throws an exception using throw keyword
 * - try/catch block is placed around code that might generate an exception (this is called protexted code)
 * - exceptions are represented as classes derived from System.Exception class
 * - 2 dervied classes from System.Exception: System.ApplicationException and System.SystemException
 * - ApplicationException = exceptoins generated by application program (user defined exceptions should derive from this)
 * - SystemException is base class for all predefined system exceptions
 */
namespace CSharp_tutorial
{

    class UserInputException : Exception
    {
        public UserInputException(string e) : base(e)
        {

        }
    }

    class UserNum
    {
        public string getInput()
        {
            string input = "";
            Console.WriteLine("Enter a string: ");
            try
            {
                input = Console.ReadLine();

                if (input.Length < 2)
                {
                    throw new UserInputException("String is too short");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                getInput();
            }
            finally
            {

            }

            return input;
        }
    }

    class ExceptionHandling
    {
        static int divide(int x, int y)
        {
            int result = 0;

            try
            {
                result = x / y;
            }
            catch(DivideByZeroException e)
            {
                Console.WriteLine("Exception thrown: {0}",e);
                result = 0;
            }
            finally
            {
                Console.WriteLine("in finally result = " + result);
                
            }
            return result;
        }

        static void Main(string[] args)
        {
            Console.WriteLine("Exception handling:");
            int num = divide(1, 0);
            Console.WriteLine("Num: {0}",num);

            UserNum userNum = new UserNum();
            userNum.getInput();
        }
    }
}
